import os


def cls():
    os.system('cls' if os.name == 'nt' else 'clear')


cls()


# ___________________________________________________________________________СЕМИНАР №1_________________________________________________________________________________


#   ЗАДАЧА №1
#  За день машина проезжает n километров. Сколько дней нужно, чтобы проехать маршрут длиной m километров?
# При решении этой задачи нельзя пользоваться условной инструкцией if и циклами.
# Input:
# n = 700
# m = 750
# Output:
# 2
# n = int(input("Введите сколько км машина проезжает за день: "))
# m = int(input("Введите длину всего пути в км: "))
# print('Кол-во дней - ', (m//n + (m % n != 0)))
# print('Кол-во дней - ', -(-m//n))
# print('Кол-во дней - ', (m + n-1) // n)


#   ЗАДАЧА №2
# В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для
# них новыми партами. За каждой партой может сидеть два учащихся. Известно количество учащихся в
# каждом из трех классов. Выведите наименьшее число парт, которое нужно приобрести для них.
# Input: 20 21 22(ввод чисел НЕ в одну строку)
# Output: 32
# n = int(input("Введите кол-во учашихся в а классе: "))
# n1 = int(input("Введите кол-во учашихся в б классе: "))
# n2 = int(input("Введите кол-во учашихся в в классе: "))
# # m1=n//2+(n%2!=0)
# # m2=n1//2+(n1%2!=0)
# # m3=n2//2+(n2%2!=0)
# m1=(n+1)//2
# m2=(n1+1)//2
# m3=(n2+1)//2
# print(f"Необходимое кол-во парт: {m1+m2+m3}")

#     ЗАДАЧА №5
# Вагоны в электричке пронумерованы натуральными числами, начиная с 1 (при этом иногда вагоны
# нумеруются от «головы» поезда, а иногда – с «хвоста»; это зависит от того, в какую сторону едет
# электричка). В каждом вагоне написан его номер. Витя сел в i-й вагон от головы поезда и обнаружил,
# что его вагон имеет номер j. Он хочет определить, сколько всего вагонов в электричке. Напишите
# программу, которая будет это делать или сообщать, что без дополнительной информации это сделать
# невозможно.
# Input: 3 4(ввод на разных строках)
# Output: 6
# i = int(input("i-й вагон: "))
# j = int(input("j-й номер: "))
# if i==j:
#     print('Недостаточно данных')
# else:
#     print(f"Кол-во вагонов в поезде: {i+j-1}")


# ___________________________________________________________________________СЕМИНАР №2_________________________________________________________________________________
#                                                                         ЦИКЛЫ FOR WHILE

#     ЗАДАЧА №7
# Дано натуральное число. Требуется определить, является ли год с данным номером високосным. Если
# год является високосным, то выведите YES, иначе выведите NO. Напомним, что в соответствии с
# григорианским календарем, год является високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.
# Input: 2016
# Output: YES
# i = int(input("Введите год: "))
# if i % 4 == 0 and i % 100 != 0 or i % 400 == 0:
#     print("Года високосный: YES")
# else:
#     print("Года високосный: NO")


# Задача No9. Решение в группах
# По данному целому неотрицательному n вычислите
# значение n!. N! = 1 * 2 * 3 * ... * N (произведение всех
# чисел от 1 до N) 0! = 1 Решить задачу используя цикл
# while
# Input: 5
# Output: 120
# n = int(input("Введите число факториал которого хотите найти: "))
# i = 1
# res = 1
# while i <= n:
#     res *= i
#     i += 1
# print(res)

# Задача No11. Решение в группах
# Дано натуральное число A > 1. Определите, каким по
# счету числом Фибоначчи оно является, то есть
# выведите такое число n, что φ(n)=A. Если А не
# является числом Фибоначчи, выведите число -1.
# Input: 5
# Output: 6
# a = int(input("Введите число: "))
# b = 0
# c = 0
# d = 1
# i = 2
# while b < a:
#     b = c + d
#     c = d
#     d = b
#     i += 1
#     if b > a:
#         i = 0
# if i == 0:
#     print(-1)
# else:
#     print(i)

# Задача No13. Решение в группах
# Уставшие от необычно теплой зимы, жители решили узнать,
# действительно ли это самая длинная оттепель за всю историю
# наблюдений за погодой. Они обратились к синоптикам, а те, в
# свою очередь, занялись исследованиями статистики за
# прошлые годы. Их интересует, сколько дней длилась самая
# длинная оттепель. Оттепелью они называют период, в
# который среднесуточная температура ежедневно превышала
# 0 градусов Цельсия. Напишите программу, помогающую
# синоптикам в работе.
# Пользователь вводит число N – общее количество
# рассматриваемых дней (1 ≤ N ≤ 100). В следующих строках
# располагается N целых чисел.
# Каждое число – среднесуточная температура в
# соответствующий день. Температуры – целые числа и лежат в
# диапазоне от –50 до 50
# Input: 6 -> -20 30 -40 50 10 -10
# Output: 2
# N = int(input("Введите количество дней: "))
# count = 0
# maxi = 0
# for i in range(N):
#     x = int(input("Введите темепературу: "))
#     if x > 0:
#         count += 1
#     else:
#         count = 0
#     if maxi < count:
#         maxi = count

# print(maxi)

# Задача No15. Решение в группах
# 15. Иван Васильевич пришел на рынок и решил
# купить два арбуза: один для себя, а другой для тещи.
# Понятно, что для себя нужно выбрать арбуз
# потяжелей, а для тещи полегче. Но вот незадача:
# арбузов слишком много и он не знает как же выбрать
# самый легкий и самый тяжелый арбуз? Помогите ему!
# Пользователь вводит одно число N – количество
# арбузов. Вторая строка содержит N чисел,
# записанных на новой строчке каждое. Здесь каждое
# число – это масса соответствующего арбуза
# Input: 5 -> 5 1 6 5 9
# Output: 1 9
# N = int(input("Введите количество арбузов: "))
# maxi = 0
# mini = 100
# for i in range(N):
#     m = int(input("Введите вес арбуза: "))
#     if m > maxi:
#         maxi = m
#     if m<mini:
#         mini = m
# print(f"Минимальный вес {mini}, максимальный вес {maxi}")

# ___________________________________________________________________________СЕМИНАР №3_________________________________________________________________________________
#                                                                         СПИСКИ И СЛОВАРИ
# Задача No17. Решение в группах
# Дан список чисел. Определите, сколько в нем встречается различных чисел.
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# numbers = [1, 1, 2, 0, -1, 3, 4, 4]
# unique = []
# for number in numbers:
#     if number not in unique:
#         unique.append(number)
# print(unique)
# print(len(unique))
# 1print(len(set(numbers)))
# list1 = list(map(int, input('Введите числа: ').split(' '))) #ввод в одну строку через пробел, с добавлением в список
# print(list1)

# Задача No19. Решение в группах
# Дана последовательность из N целых чисел и число K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо, K – положительное число.
# Input: [1, 2, 3, 4, 5] k = 3
# Output: [4, 5, 1, 2, 3]
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# numbers = [1, 2, 3, 4, 5]
# k = 3
# #new_numbers = []
# # for i in range(k, len(numbers)):
# #     new_numbers.append(numbers[i])
# # for j in range(0, k):
# #     new_numbers.append(numbers[j])
# # print(new_numbers)
# print(numbers[-k+1:] + numbers[:k])

# Задача No21. Решение в группах
# Напишите программу для печати всех уникальных значений в словаре.
# Input: [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
# {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII
# ":" S007 "}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}
# Примечание: Список словарей задан изначально. Пользователь его не вводит
# t = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"},
#      {"VII": "S005"}, {" V ": "S009"}, {" VIII ": "S007"}]
# s = set()
# for element in t:
#     for value in element.values():
#         s.add(value)
# print(s)

# Задача No23. Решение в группах Дан массив, состоящий из целых чисел. Напишите
# программу, которая подсчитает количество элементов массива, больших предыдущего (элемента
# с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2 (-1 < 5, 2 < 3)
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# numbers = [0, -1, 5, 2, 3]
# count = 0
# for i in range(1, len(numbers)):
#     if numbers[i] > numbers[i-1]:
#         count += 1
# print(count)

# n = int(input()) # задать лист определенно длины
# l = [0] * n
# for ...
#     l[i] = ...

# ___________________________________________________________________________СЕМИНАР №3_________________________________________________________________________________
#                                                                         СЛОВАРИ, МНОЖЕСТВА И ПРОФИЛИРОВАНИЕ

# Задача No25. Решение в группах
# Напишите программу, которая принимает на вход строку, и отслеживает, сколько раз каждый символ
# уже встречался. Количество повторов добавляется к символам с помощью постфикса формата _n.
# Input: a a a b c a a d c d d
# Output: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
# Для решения данной задачи используйте функцию
# .split()
# print("Введи символы: ")
# text = input().split()
# result = dict()
# for char in text:
#     if char in result:
#         print(f"{char}_{result[char]}", end=" ")
#     else:
#         print(f"{char}", end=" ")
#     result[char] = result.get(char, 0)+1

# result = dict()
# result["a"] = (result.get("a", 0))
# result["b"] = (result.get("a", 1))
# print(result)

# Задача No27. Решение в группах
# Пользователь вводит текст(строка). Словом считается последовательность непробельных символов идущих
# подряд, слова разделены одним или большим числом пробелов. Определите, сколько различных слов
# содержится в этом тексте.
# Input: She sells sea shells on the sea shore The shells
# that she sells are sea shells I'm sure.So if she sells sea
# shells on the sea shore I'm sure that the shells are sea
# shore shells
# Output: 13
# print("Введи текст: ")
# text = input().split()
# s = set()
# for word in text:
#     s.add(word.lower())
# print(s.__len__())

# Задача No29. Решение в группах
# Ваня и Петя поспорили, кто быстрее решит # следующую задачу: “Задана последовательность
# неотрицательных целых чисел. Требуется определить значение наибольшего элемента
# последовательности, которая завершается первым встретившимся нулем (число 0 не входит в
# последовательность)”. Однако 2 друга оказались не такими смышлеными. Никто из ребят не смог до
# конца сделать это задание. Они решили так: у кого будет меньше ошибок в коде, тот и выиграл спор. За
# помощью товарищи обратились к Вам, студентам.
# Примечание: Программные коды на следующих
# слайдах
# n = int(input())
# max_number = n
# while n != 0:
#     n = int(input())
#     if max_number < n:
#         max_number = n
# print(max_number)


# ___________________________________________________________________________СЕМИНАР №4_________________________________________________________________________________
#                                                                         РЕКУРСИЯ И АЛГОРИТМЫ


# Задача No31. Решение в группах
# Последовательностью Фибоначчи называется последовательность чисел a0, a1, ..., an, ..., где
# a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию
# def fib(n):
#     if n <= 1:
#         return n
#     else:
#         return fib(n-1)+fib(n-2)
# search_numbers = int(input("Введите номер искомого числа: "))
# print(f"Искомое число: {fib(search_numbers)}")

# Задача No33. Решение в группах
# Хакер Василий получил доступ к классному журналу и хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1
# numbers = int(input("Введите кол-во оценок: "))
# list1 = []
# i = 0
# while i < numbers:
#     list1.insert(i, int(input(f'Введите {i+1}-е число: ')))
#     i += 1
# max_number = max(list1)
# min_number = min(list1)
# for i in range(numbers):
#     if list1[i] == max_number:
#         list1[i] = min_number
# print(list1)

# Задача No35. Решение в группах
# Напишите функцию, которая принимает одно число и проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes
# def simple_number(numbers):
#     numbers = abs(numbers)
#     if numbers in [0, 1]:
#         return str("No")
#     elif numbers > 1:
#         for i in range(2, numbers):
#             if numbers % i == 0:
#                 return str("NO")
#     return str("YES")
# numbers = int(input("Введите число: "))
# print(f"{simple_number(numbers)}")

# Задача No37. Решение в группах
# Дано натуральное число N и последовательность из N элементов.
# Требуется вывести эту последовательность в обратном порядке.
# Примечание. В программе запрещается объявлять массивы и использовать циклы (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3

def revers(numbers):
    if numbers == 0:
        return str("")
    k = int(input("Введите элемент последовательности: "))
    return revers(numbers-1) + f"{', ' if numbers > 1 else ''}{str(k)}" #добавили разделитель в вывод


numbers = int(input("Введите кол-во элементов: "))
print(f"Последовательность в обратном порядке: [{revers(numbers)}]")
